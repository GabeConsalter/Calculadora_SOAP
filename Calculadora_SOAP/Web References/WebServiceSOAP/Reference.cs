//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calculadora_SOAP.WebServiceSOAP {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Implements_SOAPPortBinding", Namespace="http://WebServiceSOAP/")]
    public partial class Implements_SOAPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CuboOperationCompleted;
        
        private System.Threading.SendOrPostCallback SomarOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultiplicarOperationCompleted;
        
        private System.Threading.SendOrPostCallback Subtrair_A_menos_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback Dividir_A_por_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuadradoOperationCompleted;
        
        /// CodeRemarks
        public Implements_SOAPService() {
            this.Url = "http://localhost:9876/WebSeviceSOAP";
        }
        
        public Implements_SOAPService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event CuboCompletedEventHandler CuboCompleted;
        
        /// CodeRemarks
        public event SomarCompletedEventHandler SomarCompleted;
        
        /// CodeRemarks
        public event MultiplicarCompletedEventHandler MultiplicarCompleted;
        
        /// CodeRemarks
        public event Subtrair_A_menos_BCompletedEventHandler Subtrair_A_menos_BCompleted;
        
        /// CodeRemarks
        public event Dividir_A_por_BCompletedEventHandler Dividir_A_por_BCompleted;
        
        /// CodeRemarks
        public event QuadradoCompletedEventHandler QuadradoCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Cubo(float arg0) {
            object[] results = this.Invoke("Cubo", new object[] {
                        arg0});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void CuboAsync(float arg0) {
            this.CuboAsync(arg0, null);
        }
        
        /// CodeRemarks
        public void CuboAsync(float arg0, object userState) {
            if ((this.CuboOperationCompleted == null)) {
                this.CuboOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCuboOperationCompleted);
            }
            this.InvokeAsync("Cubo", new object[] {
                        arg0}, this.CuboOperationCompleted, userState);
        }
        
        private void OnCuboOperationCompleted(object arg) {
            if ((this.CuboCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CuboCompleted(this, new CuboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Somar(float arg0, float arg1) {
            object[] results = this.Invoke("Somar", new object[] {
                        arg0,
                        arg1});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void SomarAsync(float arg0, float arg1) {
            this.SomarAsync(arg0, arg1, null);
        }
        
        /// CodeRemarks
        public void SomarAsync(float arg0, float arg1, object userState) {
            if ((this.SomarOperationCompleted == null)) {
                this.SomarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSomarOperationCompleted);
            }
            this.InvokeAsync("Somar", new object[] {
                        arg0,
                        arg1}, this.SomarOperationCompleted, userState);
        }
        
        private void OnSomarOperationCompleted(object arg) {
            if ((this.SomarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SomarCompleted(this, new SomarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Multiplicar(float arg0, float arg1) {
            object[] results = this.Invoke("Multiplicar", new object[] {
                        arg0,
                        arg1});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void MultiplicarAsync(float arg0, float arg1) {
            this.MultiplicarAsync(arg0, arg1, null);
        }
        
        /// CodeRemarks
        public void MultiplicarAsync(float arg0, float arg1, object userState) {
            if ((this.MultiplicarOperationCompleted == null)) {
                this.MultiplicarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiplicarOperationCompleted);
            }
            this.InvokeAsync("Multiplicar", new object[] {
                        arg0,
                        arg1}, this.MultiplicarOperationCompleted, userState);
        }
        
        private void OnMultiplicarOperationCompleted(object arg) {
            if ((this.MultiplicarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiplicarCompleted(this, new MultiplicarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Subtrair_A_menos_B(float arg0, float arg1) {
            object[] results = this.Invoke("Subtrair_A_menos_B", new object[] {
                        arg0,
                        arg1});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void Subtrair_A_menos_BAsync(float arg0, float arg1) {
            this.Subtrair_A_menos_BAsync(arg0, arg1, null);
        }
        
        /// CodeRemarks
        public void Subtrair_A_menos_BAsync(float arg0, float arg1, object userState) {
            if ((this.Subtrair_A_menos_BOperationCompleted == null)) {
                this.Subtrair_A_menos_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubtrair_A_menos_BOperationCompleted);
            }
            this.InvokeAsync("Subtrair_A_menos_B", new object[] {
                        arg0,
                        arg1}, this.Subtrair_A_menos_BOperationCompleted, userState);
        }
        
        private void OnSubtrair_A_menos_BOperationCompleted(object arg) {
            if ((this.Subtrair_A_menos_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Subtrair_A_menos_BCompleted(this, new Subtrair_A_menos_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Dividir_A_por_B(float arg0, float arg1) {
            object[] results = this.Invoke("Dividir_A_por_B", new object[] {
                        arg0,
                        arg1});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void Dividir_A_por_BAsync(float arg0, float arg1) {
            this.Dividir_A_por_BAsync(arg0, arg1, null);
        }
        
        /// CodeRemarks
        public void Dividir_A_por_BAsync(float arg0, float arg1, object userState) {
            if ((this.Dividir_A_por_BOperationCompleted == null)) {
                this.Dividir_A_por_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDividir_A_por_BOperationCompleted);
            }
            this.InvokeAsync("Dividir_A_por_B", new object[] {
                        arg0,
                        arg1}, this.Dividir_A_por_BOperationCompleted, userState);
        }
        
        private void OnDividir_A_por_BOperationCompleted(object arg) {
            if ((this.Dividir_A_por_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Dividir_A_por_BCompleted(this, new Dividir_A_por_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://WebServiceSOAP/", ResponseNamespace="http://WebServiceSOAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public float Quadrado(float arg0) {
            object[] results = this.Invoke("Quadrado", new object[] {
                        arg0});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void QuadradoAsync(float arg0) {
            this.QuadradoAsync(arg0, null);
        }
        
        /// CodeRemarks
        public void QuadradoAsync(float arg0, object userState) {
            if ((this.QuadradoOperationCompleted == null)) {
                this.QuadradoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuadradoOperationCompleted);
            }
            this.InvokeAsync("Quadrado", new object[] {
                        arg0}, this.QuadradoOperationCompleted, userState);
        }
        
        private void OnQuadradoOperationCompleted(object arg) {
            if ((this.QuadradoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuadradoCompleted(this, new QuadradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void CuboCompletedEventHandler(object sender, CuboCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CuboCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CuboCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void SomarCompletedEventHandler(object sender, SomarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SomarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SomarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void MultiplicarCompletedEventHandler(object sender, MultiplicarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiplicarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiplicarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void Subtrair_A_menos_BCompletedEventHandler(object sender, Subtrair_A_menos_BCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Subtrair_A_menos_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Subtrair_A_menos_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void Dividir_A_por_BCompletedEventHandler(object sender, Dividir_A_por_BCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Dividir_A_por_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Dividir_A_por_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void QuadradoCompletedEventHandler(object sender, QuadradoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuadradoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuadradoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
}
